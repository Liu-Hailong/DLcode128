//
// Created by 31816 on 2022/3/14.
//

#ifndef NEW_BEAM_SEARCH_UTILS_H
#define NEW_BEAM_SEARCH_UTILS_H

#include <limits>
#include <cmath>
#include <memory>
#include <vector>
#include <algorithm>


const double NUM_FLT_INF = std::numeric_limits<double>::max();
const double NUM_FLT_MIN = std::numeric_limits<double>::min();

struct Output {
    std::vector<int> tokens, timesteps, CodeValues;
};
const int code128_start[3][7] = {
        {2, 1, 1, 4, 1, 2, 103},//      StartA
        {2, 1, 1, 2, 1, 4, 104},//      StartB
        {2, 1, 1, 2, 3, 2, 105} //      StartC
};
const int code128[103][7] = {
        {2, 1, 2, 2, 2, 2, 0},// sp          00
        {2, 2, 2, 1, 2, 2, 1},// !           01
        {2, 2, 2, 2, 2, 1, 2},// "           02
        {1, 2, 1, 2, 2, 3, 3},// #           03
        {1, 2, 1, 3, 2, 2, 4},// $           04
        {1, 3, 1, 2, 2, 2, 5},// %           05
        {1, 2, 2, 2, 1, 3, 6},// &           06
        {1, 2, 2, 3, 1, 2, 7},// ...         07
        {1, 3, 2, 2, 1, 2, 8},// (           08
        {2, 2, 1, 2, 1, 3, 9},// )           09
        {2, 2, 1, 3, 1, 2, 10},// *           10
        {2, 3, 1, 2, 1, 2, 11},// +           11
        {1, 1, 2, 2, 3, 2, 12},// ,           12
        {1, 2, 2, 1, 3, 2, 13},// -           13
        {1, 2, 2, 2, 3, 1, 14},// .           14
        {1, 1, 3, 2, 2, 2, 15},// /           15
        {1, 2, 3, 1, 2, 2, 16},// 0           16
        {1, 2, 3, 2, 2, 1, 17},// 1           17
        {2, 2, 3, 2, 1, 1, 18},// 2           18
        {2, 2, 1, 1, 3, 2, 19},// 3           19
        {2, 2, 1, 2, 3, 1, 20},// 4           20
        {2, 1, 3, 2, 1, 2, 21},// 5           21
        {2, 2, 3, 1, 1, 2, 22},// 6           22
        {3, 1, 2, 1, 3, 1, 23},// 7           23
        {3, 1, 1, 2, 2, 2, 24},// 8           24
        {3, 2, 1, 1, 2, 2, 25},// 9           25
        {3, 2, 1, 2, 2, 1, 26},// :           26
        {3, 1, 2, 2, 1, 2, 27},// ;           27
        {3, 2, 2, 1, 1, 2, 28},// <           28
        {3, 2, 2, 2, 1, 1, 29},// =           29
        {2, 1, 2, 1, 2, 3, 30},// >           30
        {2, 1, 2, 3, 2, 1, 31},// ?           31
        {2, 3, 2, 1, 2, 1, 32},// @           32
        {1, 1, 1, 3, 2, 3, 33},// A           33
        {1, 3, 1, 1, 2, 3, 34},// B           34
        {1, 3, 1, 3, 2, 1, 35},// C           35
        {1, 1, 2, 3, 1, 3, 36},// D           36
        {1, 3, 2, 1, 1, 3, 37},// E           37
        {1, 3, 2, 3, 1, 1, 38},// F           38
        {2, 1, 1, 3, 1, 3, 39},// G           39
        {2, 3, 1, 1, 1, 3, 40},// H           40
        {2, 3, 1, 3, 1, 1, 41},// I           41
        {1, 1, 2, 1, 3, 3, 42},// J           42
        {1, 1, 2, 3, 3, 1, 43},// K           43
        {1, 3, 2, 1, 3, 1, 44},// L           44
        {1, 1, 3, 1, 2, 3, 45},// M           45
        {1, 1, 3, 3, 2, 1, 46},// N           46
        {1, 3, 3, 1, 2, 1, 47},// O           47
        {3, 1, 3, 1, 2, 1, 48},// P           48
        {2, 1, 1, 3, 3, 1, 49},// Q           49
        {2, 3, 1, 1, 3, 1, 50},// R           50
        {2, 1, 3, 1, 1, 3, 51},// S           51
        {2, 1, 3, 3, 1, 1, 52},// T           52
        {2, 1, 3, 1, 3, 1, 53},// U           53
        {3, 1, 1, 1, 2, 3, 54},// V           54
        {3, 1, 1, 3, 2, 1, 55},// W           55
        {3, 3, 1, 1, 2, 1, 56},// X           56
        {3, 1, 2, 1, 1, 3, 57},// Y           57
        {3, 1, 2, 3, 1, 1, 58},// Z           58
        {3, 3, 2, 1, 1, 1, 59},// {           59
        {3, 1, 4, 1, 1, 1, 60},// \           60
        {2, 2, 1, 4, 1, 1, 61},// }           61
        {4, 3, 1, 1, 1, 1, 62},// ^           62
        {1, 1, 1, 2, 2, 4, 63},// _           63
        {1, 1, 1, 4, 2, 2, 64},// NUL   '     64
        {1, 2, 1, 1, 2, 4, 65},// SOH   a     65
        {1, 2, 1, 4, 2, 1, 66},// STX   b     66
        {1, 4, 1, 1, 2, 2, 67},// ETX   c     67
        {1, 4, 1, 2, 2, 1, 68},// EOT   d     68
        {1, 1, 2, 2, 1, 4, 69},// ENQ   e     69
        {1, 1, 2, 4, 1, 2, 70},// ACK   f     70
        {1, 2, 2, 1, 1, 4, 71},// BEL   g     71
        {1, 2, 2, 4, 1, 1, 72},// BS    h     72
        {1, 4, 2, 1, 1, 2, 73},// HT    i     73
        {1, 4, 2, 2, 1, 1, 74},// LF    j     74
        {2, 4, 1, 2, 1, 1, 75},// VT    k     75
        {2, 2, 1, 1, 1, 4, 76},// FF    l     76
        {4, 1, 3, 1, 1, 1, 77},// CR    m     77
        {2, 4, 1, 1, 1, 2, 78},// SO    n     78
        {1, 3, 4, 1, 1, 1, 79},// SI    o     79
        {1, 1, 1, 2, 4, 2, 80},// DLE   p     80
        {1, 2, 1, 1, 4, 2, 81},// DC1   q     81
        {1, 2, 1, 2, 4, 1, 82},// DC2   r     82
        {1, 1, 4, 2, 1, 2, 83},// DC3   s     83
        {1, 2, 4, 1, 1, 2, 84},// DC4   t     84
        {1, 2, 4, 2, 1, 1, 85},// NAK   u     85
        {4, 1, 1, 2, 1, 2, 86},// SYN   v     86
        {4, 2, 1, 1, 1, 2, 87},// ETB   w     87
        {4, 2, 1, 2, 1, 1, 88},// CAN   x     88
        {2, 1, 2, 1, 4, 1, 89},// EM    y     89
        {2, 1, 4, 1, 2, 1, 90},// SUB   z     90
        {4, 1, 2, 1, 2, 1, 91},// ESC   [     91
        {1, 1, 1, 1, 4, 3, 92},// FS    |     92
        {1, 1, 1, 3, 4, 1, 93},// GS    }     93
        {1, 3, 1, 1, 4, 1, 94},// RS    ~     94
        {1, 1, 4, 1, 1, 3, 95},// US    DEL   95
        {1, 1, 4, 3, 1, 1, 96},// FNC3  FNC3  96
        {4, 1, 1, 1, 1, 3, 97},// FNC2  FNC2  97
        {4, 1, 1, 3, 1, 1, 98},// SHIFT SHIFT 98
        {1, 1, 3, 1, 4, 1, 99},// CodeC CodeC 99
        {1, 1, 4, 1, 3, 1, 100},// CodeB FNC4  CodeB
        {3, 1, 1, 1, 4, 1, 101},// FNC4  CodeA CodeA
        {4, 1, 1, 1, 3, 1, 102}
};// FNC1  FNC1  FNC1
const int code128_end[8] = {2, 3, 3, 1, 1, 1, 2, 106};//     Stop

// Return the sum of two probabilities in log scale
template<typename T>
T log_sum_exp(const T &x, const T &y) {
    static T num_min = -std::numeric_limits<T>::max();
    if (x <= num_min) return y;
    if (y <= num_min) return x;
    T xmax = std::max(x, y);
    return log(exp(x - xmax) + exp(y - xmax)) + xmax;
}


#endif //NEW_BEAM_SEARCH_UTILS_H
